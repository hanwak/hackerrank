#link : https://www.hackerrank.com/challenges/extra-long-factorials/problem

#include <assert.h>
#include <limits.h>
#include <math.h>
#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

char* readline();


// Complete the extraLongFactorials function below.
void extraLongFactorials(int n) {
    int i=0,j=0,c=1,val;
    int temp=0;
    static int arr[300]; 
    
    arr[0]=1;
    for(i=1;i<=n;i++){
        for(j=0;j<c;j++){
            val=(arr[j]*i)+temp;    //Storing calc value
            arr[j]=val%10;          //Storing the last value to array
            temp=val/10;            //Storing carrier
            }
        while(temp>0){              //While carrier exists
            arr[c]=temp%10;         //Store the last value of carrier to front array
            temp=temp/10;           
            c++;
        }
    }

    /*Printing*/
    for (i=c-1; i>=0; i--){
        printf("%d",arr[i]);
    }
}

int main()
{
    char* n_endptr;
    char* n_str = readline();
    int n = strtol(n_str, &n_endptr, 10);

    if (n_endptr == n_str || *n_endptr != '\0') { exit(EXIT_FAILURE); }

    extraLongFactorials(n);

    return 0;
}

char* readline() {
    size_t alloc_length = 1024;
    size_t data_length = 0;
    char* data = malloc(alloc_length);

    while (true) {
        char* cursor = data + data_length;
        char* line = fgets(cursor, alloc_length - data_length, stdin);

        if (!line) { break; }

        data_length += strlen(cursor);

        if (data_length < alloc_length - 1 || data[data_length - 1] == '\n') { break; }

        size_t new_length = alloc_length << 1;
        data = realloc(data, new_length);

        if (!data) { break; }

        alloc_length = new_length;
    }

    if (data[data_length - 1] == '\n') {
        data[data_length - 1] = '\0';
    }

    data = realloc(data, data_length);

    return data;
}
